def countGitCommits() {
    def status = 'git status'.execute([], rootDir)
    status.waitFor()
    def isGitProject = status.exitValue()
    if (isGitProject == 69) {
        println("git returned with error 69\n" +
                "If you are a mac user that message is telling you is that you need to open the " +
                "application XCode on your Mac OS X/macOS and since it hasn’t run since the last " +
                "update, you need to accept the new license EULA agreement that’s part of the " +
                "updated XCode.")
    }
    if (isGitProject > 0) {
        println("ERROR: can't generate a git version, this is not a git project")
        println(" -> Not a git repository (or any of the parent directories): .git")
        return 0
    }
    def commitCount = 'git rev-list --count HEAD'.execute().text.trim()
    return commitCount.isInteger() ? commitCount.toInteger() : 0
}
